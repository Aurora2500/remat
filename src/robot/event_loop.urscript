def event_loop():
  ###### HELPER FUNCTIONS ######

  def get_op_id():
    # block until an id is received
    id_arr = socket_read_binary_integer(1, "async_callback", 0)
    return id_arr[1]
  end

  def get_int(reg):
    return read_input_integer_register(reg+24)
  end

  def get_float(reg):
    return read_input_float_register(reg+24)
  end

  def get_q(reg):
    local q = [0, 0, 0, 0, 0, 0]
    q[0] = get_float(reg+0)
    q[1] = get_float(reg+1)
    q[2] = get_float(reg+2)
    q[3] = get_float(reg+3)
    q[4] = get_float(reg+4)
    q[5] = get_float(reg+5)
    return q
  end

  def get_pose(reg):
    pose = p[0, 0, 0, 0, 0, 0]
    pose[0] = get_float(reg+0)
    pose[1] = get_float(reg+1)
    pose[2] = get_float(reg+2)
    pose[3] = get_float(reg+3)
    pose[4] = get_float(reg+4)
    pose[5] = get_float(reg+5)
    return pose
  end

  def async_finish(id):
    socket_send_int(id, "async_callback")
  end

  def list_to_octet(l, offset):
    octet = 0
    if l[offset]:
      octet = octet + 1
    end
    if l[offset+1]:
      octet = octet + 2
    end
    if l[offset+2]:
      octet = octet + 4
    end
    if l[offset+3]:
      octet = octet + 8
    end
    if l[offset+4]:
      octet = octet + 16
    end
    if l[offset+5]:
      octet = octet + 32
    end
    if l[offset+6]:
      octet = octet + 64
    end
    if l[offset+7]:
      octet = octet + 128
    end
    return octet
  end

  def async_setup():
    addr = integer_to_binary_list(get_int(0))
    port = get_int(1)
    octet_1 = list_to_octet(addr, 24) 
    octet_2 = list_to_octet(addr, 16) 
    octet_3 = list_to_octet(addr, 8) 
    octet_4 = list_to_octet(addr, 0) 
    ip_addr = to_str(octet_1) + "." + to_str(octet_2) + "." + to_str(octet_3) + "." + to_str(octet_4)
    conn_successful = socket_open(ip_addr, port, "async_callback")
    if not conn_successful:
      textmsg("ERROR: Failed to connect to callback server")
      halt
    end
  end

  thread servoj_thread():

    servoj(q, acceleration, speed, time, lookahead_time, gain)
  end

  def process_cmd(op_id):
    cmd = get_int(0)
    if cmd == 1:
      q = get_q(0)
      speed = get_float(6)
      acceleration = get_float(7)
      time = get_float(8)
      lookahead_time = get_float(9)
      gain = get_float(10)
    end
  end

  ###### EVENT LOOP ######

  textmsg("Loaded Event Loop")
  async_setup()
  textmsg("Callback server connection established")
  keep_running = True
  while keep_running:
    op_id = get_op_id()
    keep_running = process_cmd(op_id)
    sync()
  end
end